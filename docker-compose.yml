services:
    broker:
        image: confluentinc/cp-kafka:7.9.0
        hostname: broker
        container_name: broker
        ports:
            - "9092:9092"
            - "9101:9101"
        expose:
            - "29092"
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_PROCESS_ROLES: "broker,controller"
            KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
            KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
            KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
            KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
            KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
            CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
        networks:
            - apisix
    kafka-init:
        image: confluentinc/cp-kafka:7.9.0
        depends_on:
            - broker
        command: >
            sh -c "kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic requests --replication-factor 1 --partitions 3 &&
                    kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic responses --replication-factor 1 --partitions 3 &&
                    kafka-topics --bootstrap-server broker:29092 --list"
        networks:
            - apisix
    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
        depends_on:
            - broker
        restart: always
        networks:
            - apisix
    movie_db:
        image: postgres:latest
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB_NAME}
        networks:
            - apisix
    movie_service:
        build: ./movie_service
        command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
        ports:
            - 8000:8000
        depends_on:
            - movie_db
        networks:
            - apisix
    apisix:
        build:
            context: ./custom_apisix
            dockerfile: Dockerfile
        restart: always
        volumes:
            - ./apisix_log:/usr/local/apisix/logs
            - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
            - ./apisix_conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
            - ./apisix_plugins:/usr/local/apisix/plugins
        ports:
            - "9180:9180/tcp" # admin port
            - "9080:9080/tcp"
        environment:
            - APISIX_STAND_ALONE=true # Tắt chế độ standalone
        networks:
            - apisix

networks:
    apisix:
